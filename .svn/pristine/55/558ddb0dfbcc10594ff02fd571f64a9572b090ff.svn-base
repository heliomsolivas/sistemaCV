package financeiro.bean;

import java.io.Serializable;
import java.text.DecimalFormat;
import java.util.Calendar;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

@Entity(name = "FINANCEIRO_CONTARECEBER")
@Table(name = "FINANCEIRO_CONTARECEBER")
public class ContaReceber implements Serializable {

	private static final long serialVersionUID = 8024946398753274444L;

	private Long id;
	private ContaBancaria contaBancaria;
	private Categoria categoria;
	private Especie especie;
	private String numeroDocumento;
	private String observacao;
	private Boolean cancelado;
	private Calendar dataVencimento;
	private Calendar dataPagamento;
	private Double valor;
	private Double desconto;
	private Double multa;
	private Double juros;
	private Double valorTotal;

	@Id
	@GeneratedValue
	@Column(name = "id", nullable = false)
	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne
	@JoinColumn(name = "fk_contaBancaria", nullable = false)
	public ContaBancaria getContaBancaria() {
		return contaBancaria;
	}

	public void setContaBancaria(ContaBancaria contaBancaria) {
		this.contaBancaria = contaBancaria;
	}

	@ManyToOne
	@JoinColumn(name = "fk_categoria", nullable = false)
	public Categoria getCategoria() {
		return categoria;
	}

	public void setCategoria(Categoria categoria) {
		this.categoria = categoria;
	}

	@ManyToOne
	@JoinColumn(name = "fk_especie", nullable = false)
	public Especie getEspecie() {
		return especie;
	}

	public void setEspecie(Especie especie) {
		this.especie = especie;
	}

	@Column(name = "numeroDocumento", nullable = true)
	public String getNumeroDocumento() {
		return numeroDocumento;
	}

	public void setNumeroDocumento(String numeroDocumento) {
		this.numeroDocumento = numeroDocumento;
	}

	@Column(name = "observacao", length = 5000, nullable = true)
	public String getObservacao() {
		return observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@Column(name = "cancelado", nullable = false)
	public Boolean getCancelado() {
		return cancelado;
	}

	public void setCancelado(Boolean cancelado) {
		this.cancelado = cancelado;
	}

	@Column(name = "dataVencimento", nullable = false)
	public Calendar getDataVencimento() {
		return dataVencimento;
	}

	public void setDataVencimento(Calendar dataVencimento) {
		this.dataVencimento = dataVencimento;
	}

	@Column(name = "dataPagamento", nullable = true)
	public Calendar getDataPagamento() {
		return dataPagamento;
	}

	public void setDataPagamento(Calendar dataPagamento) {
		this.dataPagamento = dataPagamento;
	}

	@Column(name = "valor", nullable = false)
	public Double getValor() {
		return valor;
	}

	public void setValor(Double valor) {
		this.valor = valor;
	}

	@Column(name = "desconto", nullable = true)
	public Double getDesconto() {
		return desconto;
	}

	public void setDesconto(Double desconto) {
		this.desconto = desconto;
	}

	@Column(name = "multa", nullable = true)
	public Double getMulta() {
		return multa;
	}

	public void setMulta(Double multa) {
		this.multa = multa;
	}

	@Column(name = "juros", nullable = true)
	public Double getJuros() {
		return juros;
	}

	public void setJuros(Double juros) {
		this.juros = juros;
	}

	@Column(name = "valorTotal", nullable = false)
	public Double getValorTotal() {
		return valorTotal;
	}

	public void setValorTotal(Double valorTotal) {
		this.valorTotal = valorTotal;
	}
	
	@Transient
	public String getValorString() {
		DecimalFormat formatador = new DecimalFormat("#,##0.00");
		return formatador.format(valor);
	}
	
	@Transient
	public String getJurosString() {
		DecimalFormat formatador = new DecimalFormat("#,##0.00");
		return formatador.format(juros);
	}
	
	@Transient
	public String getDescontoString() {
		DecimalFormat formatador = new DecimalFormat("#,##0.00");
		return formatador.format(desconto);
	}
	
	@Transient
	public String getMultaString() {
		DecimalFormat formatador = new DecimalFormat("#,##0.00");
		return formatador.format(multa);
	}
	
	@Transient
	public String getValorTotalString() {
		DecimalFormat formatador = new DecimalFormat("#,##0.00");
		return formatador.format(valorTotal);
	}

}
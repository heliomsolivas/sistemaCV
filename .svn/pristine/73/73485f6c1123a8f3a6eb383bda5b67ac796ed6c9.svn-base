package generic.controller;

import generic.annotation.LogonRequired;
import generic.component.UserSession;

import java.text.DateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.TimeZone;

import br.com.caelum.vraptor.Path;
import br.com.caelum.vraptor.Resource;
import br.com.caelum.vraptor.Result;
import br.com.caelum.vraptor.core.Localization;

@LogonRequired
@Resource
public class SistemaController {

	private final Localization localization;
	private final Result result;
	private final UserSession userSession;

	public SistemaController(Localization localization, Result result, UserSession userSession) {
		this.localization = localization;
		this.result = result;
		this.userSession = userSession;
	}

	@Path("/sistema")
	public void index() {
		Calendar dataAtual = new GregorianCalendar(TimeZone.getTimeZone("GMT-3"), new Locale("pt","BR"));

		try {
			DateFormat dateFormat = DateFormat.getDateInstance(DateFormat.FULL, this.localization.getLocale());

			Integer hora = dataAtual.get(Calendar.HOUR_OF_DAY);
			String saudacao = (hora >= 0 && hora <= 12) ? "saudacao.manha" : (hora >= 12) && (hora < 18) ? "saudacao.tarde"	: (hora >= 18) && (hora < 24) ? "saudacao.noite" : "saudacao.manha";

			result.include("data", this.localization.getMessage("data", dateFormat.format(dataAtual.getTime())));
			result.include("saudacao", this.localization.getMessage(saudacao, this.userSession.getUsuario().getNome()));
		} catch (Exception e) {
			result.include("mensagem", "logon.sessao.expirada");
			result.redirectTo(SistemaController.class).acessoRestrito();
		}
	}

	@Path("/sistema/acessoRestrito")
	public void acessoRestrito() {
	}

	@Path("/sistema/aplicativos")
	public void aplicativos() {
	}
	
	
	@Path("/sistema/teste")
	public void formularioTeste() {
		
	}

}
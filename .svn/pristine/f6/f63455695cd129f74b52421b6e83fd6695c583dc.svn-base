package contabil.controller;

import generic.annotation.LogonRequired;
import generic.annotation.PerfilRequired;
import generic.component.Erro;

import java.util.Collection;

import javax.servlet.http.HttpServletResponse;

import br.com.caelum.vraptor.Path;
import br.com.caelum.vraptor.Post;
import br.com.caelum.vraptor.Resource;
import br.com.caelum.vraptor.Result;
import contabil.bean.ContaContabil;
import contabil.bean.Historico;
import contabil.bean.Lancamento;
import contabil.dao.DaoContaContabil;
import contabil.dao.DaoHistorico;
import contabil.dao.DaoLancamento;

@LogonRequired @PerfilRequired
@Resource
@Path("contabil/")
public class ContabilController {
    
	private final DaoContaContabil daoContaContabil;
    private final DaoHistorico daoHistorico;
    private final DaoLancamento daoLancamento;
    private final Erro erro;
    private final Result result;
    
    public ContabilController(DaoContaContabil daoContaContabil, DaoHistorico daoHistorico, DaoLancamento daoLancamento, Erro erro, Result result) {
    	this.daoContaContabil = daoContaContabil;
    	this.daoHistorico = daoHistorico;
    	this.daoLancamento = daoLancamento;
		this.erro = erro;
		this.result = result;
    }
    
    @Path("conta/cadastrar")
    public void formContaContabil() {
    }
    
    @Path("historico/cadastrar")
    public void formHistorico() {
    }
    
    @Path("lancamento/cadastrar")
    public void formLancamento() {
    	result.include("historicoList", daoHistorico.listarTudo());
    	result.include("contaCreditoList", daoContaContabil.listarTudo());
    	result.include("contaDebitoList", daoContaContabil.listarTudo());
    }
    
    @Path("conta/consultar/{id}")
    public void consultarContaContabil(Long id) {
    	result.include("contaContabil", daoContaContabil.buscar(id));
    }
    
    @Path("historico/consultar/{id}")
    public void consultarHistorico(Long id) {
    	result.include("historico", daoHistorico.buscar(id));
    }
    
    @Path("lancamento/consultar/{id}")
    public void consultarLancamento(Long id) {
    	result.include("lancamento", daoLancamento.buscar(id));
    	result.include("historicoList", daoHistorico.listarTudo());
    	result.include("contaCreditoList", daoContaContabil.listarTudo());
    	result.include("contaDebitoList", daoContaContabil.listarTudo());
    }
    
    @Path("conta/lista")
    public void listaContaContabil() {
    	result.include("contaContabilList", daoContaContabil.listarTudo("id", "ASC"));
    }
    
    @Path("historico/lista")
    public void listaHistorico() {
    	result.include("historicoList", daoHistorico.listarTudo("id", "ASC"));
    }
    
    @Path("lancamento/lista")
    public void listaLancamento() {
    	result.include("lancamentoList", daoLancamento.listarTudo("id", "ASC"));
    }
    
    @Post("conta/gravar")
    public void gravar(ContaContabil contaContabil){
    	try {
        	daoContaContabil.atualizar(contaContabil);
		} catch (Exception e) {
			result.include("mensagem", "contabil.gravar.erro");
			erro.imprimir(this.getClass().getName(), "gravar" ,e);
		}
		result.nothing();
    }
    
    @Post("historico/gravar")
    public void gravar(Historico historico){
    	try {
        	daoHistorico.atualizar(historico);
		} catch (Exception e) {
			result.include("mensagem", "contabil.gravar.erro");
			erro.imprimir(this.getClass().getName(), "gravar" ,e);
		}
		result.nothing();
    }
    
    @Post("lancamento/gravar")
    public void gravar(Lancamento lancamento){
    	try {
        	daoLancamento.atualizar(lancamento);
		} catch (Exception e) {
			result.include("mensagem", "contabil.gravar.erro");
			erro.imprimir(this.getClass().getName(), "gravar" ,e);
		}
		result.nothing();
    }
    
    @Post("conta/remover")
    public void remover(ContaContabil contaContabil, Long id, HttpServletResponse response) {
    	try {
			contaContabil = daoContaContabil.buscar(id);
        		
    		if(contaContabil.getLancamentoList().isEmpty())
        		daoContaContabil.remover(contaContabil);
    		else
    			response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
		} catch (Exception e) {
			erro.imprimir(this.getClass().getName(), "gravar" ,e);
		}
		result.nothing();
    }
    
    @Post("historico/remover")
    public void remover(Historico historico, Long id, HttpServletResponse response) {
    	try {    		
    		Collection<Lancamento> lancamentoList  = daoLancamento.pesquisarPorHistorico(id);
    		
    		if(lancamentoList.isEmpty()){
    			historico = daoHistorico.buscar(id);
        		
        		daoHistorico.remover(historico);
    		} else
    			response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
		} catch (Exception e) {
			erro.imprimir(this.getClass().getName(), "gravar" ,e);
		}
		result.nothing();
    }
    
    @Post("lancamento/remover")
    public void remover(Lancamento lancamento, Long id) {
    	try {
    		lancamento = daoLancamento.buscar(id);
    		
    		daoLancamento.remover(lancamento);
		} catch (Exception e) {
			erro.imprimir(this.getClass().getName(), "gravar" ,e);
		}
		result.nothing();
    }
}